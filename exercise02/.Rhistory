dim(socialmarketing)
X = socialmarketing[,-(1:2)]
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
X = socialmarketing[,-(1:2)]
X = scale(X, center=TRUE, scale=TRUE)
mu = attr(X,"scaled:center")
summary(x)
summary(X)
X = socialmarketing[,-(1:2)]
summary(X)
X = socialmarketing[,-(1:2)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
```{r, echo=FALSE}
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
clust5$center[3,]*sigma + mu
clust5$center[4,]*sigma + mu#
clust5$center[5,]*sigma + mu
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu #chatter, photo_sharing
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu #chatter, photo_sharing
clust5$center[2,]*sigma + mu #cooking, fashion, beauty, chatter, photo sharing
clust5$center[3,]*sigma + mu #chatter, photo sharing, personal fitness, health nutrition
clust5$center[4,]*sigma + mu #chatter, photo sharing, parenting, sports fandom, food, family
clust5$center[5,]*sigma + mu #chatter, photo_sharing, news, politics, travel
clust5$tot.withinss
clust5$betweenss
set.seed(1)
clust4 = kmeanspp(X, k=4, nstart=25)
clust4$center[1,]*sigma + mu
clust4$center[2,]*sigma + mu
clust4$center[3,]*sigma + mu
clust4$center[4,]*sigma + mu
clust4$tot.withinss
clust4$betweenss
set.seed(1)
clust6 = kmeanspp(X, k=6, nstart=25)
clust6$center[1,]*sigma + mu
clust6$center[2,]*sigma + mu
clust6$center[3,]*sigma + mu
clust6$center[4,]*sigma + mu
clust6$center[5,]*sigma + mu
clust6$center[6,]*sigma + mu
clust6$tot.withinss
clust6$betweenss
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:5, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
clust6$center[1,]*sigma + mu #chatter, photo sharing
clust6$center[5,]*sigma + mu # politics, travel, news
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(online_gaming, college_uni,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(health_nutrition, personal_fitness, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(family, sports_fandom, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(religion, sports_fandom, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(news, politics,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
knitr::opts_chunk$set(echo = TRUE)
green_data = read.csv('greenbuildings.csv')
green_data$renovated = as.factor(green_data$renovated)
green_data$class_a = as.factor(green_data$class_a)
green_data$class_b = as.factor(green_data$class_b)
green_data$green_rating = as.factor(green_data$green_rating)
green_data$LEED = as.factor(green_data$LEED)
green_data$Energystar = as.factor(green_data$Energystar)
green_data$net = as.factor(green_data$net)
green_data$amenities = as.factor(green_data$amenities)
green_data$green_rating = as.factor(green_data$green_rating)
plot(green_data$green_rating, green_data$Rent, xlab='GREEN CERTIFIED', ylab='RENT', col='beige')
# Compare RENT values vs. being LEED or ENERGYSTAR CERTIFIED
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='pink')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
lmgreen = lm(green_data$Rent~., data=green_data)
summary(lmgreen)
plot(green_data$green_rating, green_data$amenities, xlab='GREEN RATING', ylab='AMENITIES')
par(mfrow=c(1,2))
plot(green_data$green_rating, green_data$class_a, xlab='GREEN RATING', ylab='CLASS A')
plot(green_data$green_rating, green_data$class_b, xlab='GREEN RATING', ylab='CLASS B')
plot(green_data$green_rating, green_data$net, xlab='GREEN', ylab='NET')
plot(green_data$green_rating, green_data$age, xlab='GREEN RATING', ylab='AGE', col='beige')
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
### optimal output from above shows wither 3 or 6 for k so lets try both
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
#cluster 3 centers
clust5$center[1,]*sigma + mu #chatter, photo_sharing, not active
clust5$center[2,]*sigma + mu #cooking, fashion, beauty, chatter, photo sharing
clust5$center[3,]*sigma + mu #chatter, photo sharing, personal fitness, health nutrition
clust5$center[4,]*sigma + mu #chatter, photo sharing, parenting, sports fandom, food, family
clust5$center[5,]*sigma + mu #chatter, photo_sharing, news, politics, travel,
#checking to see sum of squares
clust5$tot.withinss
clust5$betweenss
options(scipen=999)
set.seed(1)
clust4 = kmeanspp(X, k=4, nstart=25)
#cluster 4  centers
clust4$center[1,]*sigma + mu # food, sports fandom, religion, parenting
clust4$center[2,]*sigma + mu # not active
clust4$center[3,]*sigma + mu #travel, politics, news
clust4$center[4,]*sigma + mu #cooking, fashion, shopping, health_nutrition
#checking to see sum of squares
clust4$tot.withinss
clust4$betweenss
set.seed(1)
clust6 = kmeanspp(X, k=6, nstart=25)
#cluster 6  centers
clust6$center[1,]*sigma + mu #chatter, photo sharing
clust6$center[2,]*sigma + mu #online gaming, college universities
clust6$center[3,]*sigma + mu #health nutrition, personal fitness
clust6$center[4,]*sigma + mu # sports fandom, parenting, religion
clust6$center[5,]*sigma + mu # politics, travel, news
clust6$center[6,]*sigma + mu # fashion, cooking, beauty, photo sharing
#checking to see sum of squares
clust6$tot.withinss
clust6$betweenss
# qplot is in the ggplot2 library
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(online_gaming, college_uni,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(health_nutrition, personal_fitness, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(religion, sports_fandom, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(news, politics,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
setwd("C:/Users/gabriellalio/Desktop/Scott/exercise02")
airlinedata = read.csv("ABIA.csv")
df = data.frame(aggregate(Cancelled~ UniqueCarrier, airlinedata, sum))
df2 = df[order(df$Cancelled),]
barplot(df2$Cancelled, names = df2$UniqueCarrier,
xlab = "Unique Carrier", ylab = "# of Flight Cancellations",
main = "Flight Cancellations per Airline", las=2, space=.5, col='beige')
df3 = data.frame(aggregate(ArrDelay~ UniqueCarrier, airlinedata, mean))
df4 = df3[order(df3$ArrDelay),]
barplot(df4$ArrDelay, names = df4$UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Arrival Delay (minutes)",
main = "Avg. Arrival Delay times per Airline", las=2, space=.5, col='coral')
df3 = data.frame(aggregate(ArrDelay~ UniqueCarrier, airlinedata, length))
df4 = df3[order(df3$ArrDelay),]
barplot(df4$ArrDelay, names = df4$UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Arrival Delay (minutes)",
main = "Avg. Arrival Delay times per Airline", las=2, space=.5, col='coral')
arrivaldelays = airlinedata[which(airlinedata[,15]>0),]
df3 = data.frame(aggregate(arrivaldelays$ArrDelay~ arrivaldelays$UniqueCarrier, arrivaldelays, length))
df4 = df3[order(df3$ArrDelay),]
arrivaldelays = airlinedata[which(airlinedata[,15]>0),]
df3 = data.frame(aggregate(arrivaldelays$ArrDelay~ arrivaldelays$UniqueCarrier, arrivaldelays, length))
df4 = df3[order(df3$ArrDelay),]
fix(df3)
df4 = df3[order(df3$ArrDelay),]
fix(df3)
df4 = df3[order(df3$arrivaldelays.ArrDelay),]
fix(df4)
arrivaldelays = airlinedata[which(airlinedata[,15]>0),]
df3 = data.frame(aggregate(arrivaldelays$ArrDelay~ arrivaldelays$UniqueCarrier, arrivaldelays, length))
df4 = df3[order(df3$arrivaldelays.ArrDelay),]
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "# of Arrival Delays",
main = "Avg. Arrival Delay times per Airline", las=2, space=.5, col='coral')
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "# of Arrival Delays",
main = "# of Arrival Delays per Airline", las=2, space=.5, col='coral')
arrivaldelays = airlinedata[which(airlinedata[,15]>0),]
df3 = data.frame(aggregate(arrivaldelays$ArrDelay~ arrivaldelays$UniqueCarrier, arrivaldelays, mean))
df4 = df3[order(df3$arrivaldelays.ArrDelay),]
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "# of Arrival Delays",
main = "# of Arrival Delays per Airline", las=2, space=.5, col='coral')
arrivaldelays = airlinedata[which(airlinedata[,15]>0),]
df3 = data.frame(aggregate(arrivaldelays$ArrDelay~ arrivaldelays$UniqueCarrier, arrivaldelays, mean))
df4 = df3[order(df3$arrivaldelays.ArrDelay),]
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. of Arrival Delays (minutes)",
main = "Avg. Time of Arrival Delays per Airline", las=2, space=.5, col='coral')
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Arrival Delays (minutes)",
main = "Avg. Time of Arrival Delays per Airline", las=2, space=.5, col='coral')
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Arrival Delays (minutes)",
main = "Avg. Arrival Delays times per Airline", las=2, space=.5, col='coral')
departdelays = airlinedata[which(airlinedata[,16]>0),]
df5 = data.frame(aggregate(departdelays$DepDelay~ departdelays$UniqueCarrier, airlinedata, mean))
df6 = df5[order(df5$departdelays.DepDelay),]
barplot(df6$departdelays.DepDelay, names = df6$departdelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times per Airline", las=2, space=.5,
col='darkolivegreen3')
df = data.frame(aggregate(Cancelled~ UniqueCarrier, airlinedata, length))
df2 = df[order(df$Cancelled),]
barplot(df2$Cancelled, names = df2$UniqueCarrier,
xlab = "Unique Carrier", ylab = "# of Flight Cancellations",
main = "Flight Cancellations per Airline", las=2, space=.5, col='beige')
df = data.frame(aggregate(Cancelled~ UniqueCarrier, airlinedata, sum))
df2 = df[order(df$Cancelled),]
barplot(df2$Cancelled, names = df2$UniqueCarrier,
xlab = "Unique Carrier", ylab = "# of Flight Cancellations",
main = "Flight Cancellations per Airline", las=2, space=.5, col='beige')
delays = airlinedata[which(airlinedata[,16]>0),]
dfm = data.frame(aggregate(delays$DepDelay~ delays$Month, delays, length))
fix(dfm)
plot(dfm$Month, dfm$DepDelay,
xlab = "Months", ylab = "Avg. Departure Delay (minutes)",
main = "Avg. Departure Delays by Month", type='o',
col='lightpink4', lwd=2, pch=5)
plot(dfm$delays.Month, dfm$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delay (minutes)",
main = "Avg. Departure Delays by Month", type='o',
col='lightpink4', lwd=2, pch=5)
plot(dfm$delays.Month, dfm$delays.DepDelay,
xlab = "Months", ylab = "# of Departure Delays",
main = "# of Departure Delays by Month", type='o',
col='lightpink4', lwd=2, pch=5)
delays = airlinedata[which(airlinedata[,16]>0),]
dfmm = data.frame(aggregate(delays$DepDelay~ delays$Month, delays, mean))
plot(dfmm$delays.Month, dfmm$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Month", type='o',
col='lightpink4', lwd=2, pch=5)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfm = data.frame(aggregate(delays$DepDelay~ delays$Month, delays, length))
plot(dfm$delays.Month, dfm$delays.DepDelay,
xlab = "Months", ylab = "# of Departure Delays",
main = "# of Departure Delays by Month", type='o',
col='lightpink4', lwd=2, pch=5)
dfmm = data.frame(aggregate(delays$DepDelay~ delays$Month, delays, mean))
plot(dfmm$delays.Month, dfmm$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Month", type='o',
col='lightpink4', lwd=2, pch=5)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfday = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
plot(dfday$delays.DayOfWeek, dfday$delays.DepDelay,
xlab = "Day (1-Monday to 7-Sunday)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='lightpink4', lwd=2, pch=5)
dfmdays = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, mean))
plot(dfmdays$delays.DayOfWeek, dfmdays$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Month", type='o',
col='lightpink4', lwd=2, pch=5)
```{r, echo=TRUE}
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfday = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
plot(dfday$delays.DayOfWeek, dfday$delays.DepDelay,
xlab = "Day (1-Monday to 7-Sunday)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='lightpink4', lwd=2, pch=5)
dfmdays = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, mean))
plot(dfmdays$delays.DayOfWeek, dfmdays$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Day", type='o',
col='lightpink4', lwd=2, pch=5)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfday = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
plot(dfday$delays.DayOfWeek, dfday$delays.DepDelay,
xlab = "Day (1-Monday to 7-Sunday)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='lightpink2', lwd=2, pch=5)
dfmdays = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, mean))
plot(dfmdays$delays.DayOfWeek, dfmdays$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Day", type='o',
col='lightpink2', lwd=2, pch=5)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfday = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
plot(dfday$delays.DayOfWeek, dfday$delays.DepDelay,
xlab = "Day (1-Monday to 7-Sunday)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='lightpink2', lwd=2, pch=7)
dfmdays = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, mean))
plot(dfmdays$delays.DayOfWeek, dfmdays$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Day", type='o',
col='lightpink2', lwd=2, pch=7)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfhour = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
plot(dfhour$delays.DepTime, dfhour$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
plot(dfhour$delays.DepTime, dfhour$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
dfhour = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
hourdata = dfhour[complete.cases(dfhour), ]
plot(hourdata$delays.DepTime, hourdata$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfhour = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, length))
plot(dfhour$delays.DepTime, dfhour$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
dfmhours = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, mean))
plot(dfmhours$delays.DepTime, dfmhours$delays.DepDelay,
xlab = "Time (military time)", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Day", type='o',
col='brown', lwd=2, pch=7)
delays = airlinedata[which(airlinedata[,16]>0),]
dfhour = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, length))
plot(dfhour$delays.DepTime, dfhour$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
dfmhours = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, mean))
plot(dfmhours$delays.DepTime, dfmhours$delays.DepDelay,
xlab = "Time (military time)", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Hour", type='o',
col='brown', lwd=2, pch=7)
delays = airlinedata[which(airlinedata[,16]>0),]
dfhour = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, length))
plot(dfhour$delays.DepTime, dfhour$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
dfmhours = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, mean))
plot(dfmhours$delays.DepTime, dfmhours$delays.DepDelay,
xlab = "Time (military time)", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Hour", type='o',
col='brown', lwd=2, pch=7)
setwd("C:/Users/gabriellalio/Desktop/Scott/exercise02")
arrivaldelays = airlinedata[which(airlinedata[,15]>0),]
df3 = data.frame(aggregate(arrivaldelays$ArrDelay~ arrivaldelays$UniqueCarrier, arrivaldelays, mean))
df4 = df3[order(df3$arrivaldelays.ArrDelay),]
barplot(df4$arrivaldelays.ArrDelay, names = df4$arrivaldelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Arrival Delays (minutes)",
main = "Avg. Arrival Delay times per Airline", las=2, space=.5, col='coral')
departdelays = airlinedata[which(airlinedata[,16]>0),]
df5 = data.frame(aggregate(departdelays$DepDelay~ departdelays$UniqueCarrier, airlinedata, mean))
df6 = df5[order(df5$departdelays.DepDelay),]
barplot(df6$departdelays.DepDelay, names = df6$departdelays.UniqueCarrier,
xlab = "Unique Carrier", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times per Airline", las=2, space=.5,
col='darkolivegreen3')
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfm = data.frame(aggregate(delays$DepDelay~ delays$Month, delays, length))
plot(dfm$delays.Month, dfm$delays.DepDelay,
xlab = "Months", ylab = "# of Departure Delays",
main = "# of Departure Delays by Month", type='o',
col='lightpink4', lwd=2, pch=5)
dfmm = data.frame(aggregate(delays$DepDelay~ delays$Month, delays, mean))
plot(dfmm$delays.Month, dfmm$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Month", type='o',
col='lightpink4', lwd=2, pch=5)
par(mfrow=c(1,2))
delays = airlinedata[which(airlinedata[,16]>0),]
dfday = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, length))
plot(dfday$delays.DayOfWeek, dfday$delays.DepDelay,
xlab = "Day (1-Monday to 7-Sunday)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='lightpink2', lwd=2, pch=7)
dfmdays = data.frame(aggregate(delays$DepDelay~ delays$DayOfWeek, delays, mean))
plot(dfmdays$delays.DayOfWeek, dfmdays$delays.DepDelay,
xlab = "Months", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Day", type='o',
col='lightpink2', lwd=2, pch=7)
delays = airlinedata[which(airlinedata[,16]>0),]
dfhour = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, length))
plot(dfhour$delays.DepTime, dfhour$delays.DepDelay,
xlab = "Time (military time)", ylab = "# of Departure Delays",
main = "# of Departure Delays by Day", type='o',
col='brown', lwd=2, pch=7)
dfmhours = data.frame(aggregate(delays$DepDelay~ delays$DepTime, delays, mean))
plot(dfmhours$delays.DepTime, dfmhours$delays.DepDelay,
xlab = "Time (military time)", ylab = "Avg. Departure Delays (minutes)",
main = "Avg. Departure Delay times by Hour", type='o',
col='brown', lwd=2, pch=7)
rm(list=ls())
