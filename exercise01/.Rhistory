qplot(news, politics,data=socialmarketing, color=factor(clust5$cluster))
qplot(family, food, data=socialmarketing, color=factor(clust5$cluster))
clust5$tot.withinss
clust5$betweenss
clust6$center[1,]*sigma + mu
clust6$center[2,]*sigma + mu
clust6$center[3,]*sigma + mu
clust6$center[4,]*sigma + mu
clust6$center[5,]*sigma + mu
clust6$center[6,]*sigma + mu
qplot(news, politics,data=socialmarketing, color=factor(clust6$cluster))
qplot(family, food, data=socialmarketing, color=factor(clust6$cluster))
options(scipen=999)
clust6$center[1,]*sigma + mu
clust6$center[2,]*sigma + mu
clust6$center[3,]*sigma + mu
clust6$center[4,]*sigma + mu
clust6$center[5,]*sigma + mu
clust6$center[6,]*sigma + mu
clust6$tot.withinss
clust6$betweenss
clust5$tot.withinss
clust5$betweenss
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
clust5 = kmeanspp(X, k=5, nstart=25)
clust6 = kmeanspp(X, k=6, nstart=25)
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust6 = kmeanspp(X, k=6, nstart=25)
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
clust5$center[3,]*sigma + mu
clust5$center[4,]*sigma + mu
clust5$center[5,]*sigma + mu
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust6 = kmeanspp(X, k=6, nstart=25)
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
qplot(news, politics,data=socialmarketing, color=factor(clust5$cluster))
qplot(family, food, data=socialmarketing, color=factor(clust5$cluster))
qplot(beauty, fashion,data=socialmarketing, color=factor(clust6$cluster))
qplot(beauty, fashion,data=socialmarketing, color=factor(clust5$cluster))
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
qplot(beauty, fashion,data=socialmarketing, color=factor(clust5$cluster))
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
### optimal output from above shows wither 3 or 6 for k so lets try both
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust4 = kmeanspp(X, k=4, nstart=25)
#cluster 3 centers
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
clust5$center[3,]*sigma + mu
clust5$center[4,]*sigma + mu
clust5$center[5,]*sigma + mu
qplot(beauty, fashion,data=socialmarketing, color=factor(clust5$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(2), color=factor(clust5$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(family, food, data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(health_nutrition, personal_fitness, data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(college_uni, online_gaming,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(shopping, news,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
### finding the optimal K###
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust4 = kmeanspp(X, k=4, nstart=25)
#cluster 3 centers
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
clust5$center[3,]*sigma + mu
clust5$center[4,]*sigma + mu
clust5$center[5,]*sigma + mu
clust5$tot.withinss
clust5$betweenss
clust4$tot.withinss
clust4$betweenss
clust4$center[1,]*sigma + mu
clust4 = kmeanspp(X, k=4, nstart=25)
clust4$center[1,]*sigma + mu
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust4 = kmeanspp(X, k=4, nstart=25)
set.seed(1)
clust4 = kmeanspp(X, k=4, nstart=25)
clust4$center[1,]*sigma + mu
clust4$center[1,]*sigma + mu
clust4$center[2,]*sigma + mu
clust4$center[3,]*sigma + mu
clust4$center[4,]*sigma + mu
qplot(beauty, fashion,data=socialmarketing, color=factor(clust4$cluster))
qplot(college_uni, news,data=socialmarketing, color=factor(clust4$cluster))
qplot(college_uni, online_gaming,data=socialmarketing, color=factor(clust4$cluster))
qplot(college_uni, online_gaming,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(shopping, news,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
clust5$center[2,]*sigma + mu
qplot(college_uni, online_gaming,data=socialmarketing, color=factor(clust4$cluster))
clust4$center[1,]*sigma + mu
qplot(college_uni, shopping,data=socialmarketing, color=factor(clust4$cluster))
et.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(3)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(5)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(6)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
clust4 = kmeanspp(X, k=4, nstart=25)
clust4$center[1,]*sigma + mu
set.seed(1)
clust6 = kmeanspp(X, k=6, nstart=25)
clust6$center[1,]*sigma + mu
clust6$center[2,]*sigma + mu
clust6$center[3,]*sigma + mu
clust6$center[4,]*sigma + mu
clust6$center[5,]*sigma + mu
clust6$center[6,]*sigma + mu
qplot(news, shopping,data=socialmarketing, color=factor(clust6$cluster))
qplot(news, shopping,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(personal_fitness, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(health_nutrition, cooking, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(food, religion, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(college_uni, online_gaming, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(fashion, beauty, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(news, shopping,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(news, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(shopping, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(shopping, news,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
clust6$tot.withinss
clust6$betweenss
clust4$tot.withinss
clust4$betweenss
clust5$tot.withinss
clust5$betweenss
qplot(college_uni, online_gaming,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(shopping, news,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(health_nutrition, news,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(family, food, data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(health_nutrition, personal_fitness, data=socialmarketing, size=I(3), color=factor(clust5$cluster))
clust5$tot.withinss
qplot(shopping, news,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(health_nutrition, news,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(news, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(personal_fitness, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(health_nutrition, cooking, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(food, religion, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(college_uni, online_gaming, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(fashion, beauty, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(news, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(personal_fitness, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(college_uni, online_gaming,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(health_nutrition, news,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(family, food, data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(health_nutrition, personal_fitness, data=socialmarketing, size=I(3), color=factor(clust5$cluster))
qplot(news, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(personal_fitness, health_nutrition,data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(health_nutrition, cooking, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(food, religion, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(college_uni, online_gaming, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
qplot(fashion, beauty, data=socialmarketing, color=factor(clust6$cluster), size=I(3))
set.seed(6)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
clust5$center[3,]*sigma + mu
clust5$center[5,]*sigma + mu
