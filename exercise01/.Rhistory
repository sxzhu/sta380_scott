plot(green_data$size, green_data$Rent, xlab='SIZE', ylab='RENT')
plot(green_data$size, green_data$Rent, xlab='SIZE', ylab='RENT')
cor(green_data$size, green_data$Rent)
plot(green_data$size, green_data$Rent, xlab='SIZE', ylab='RENT')
cor(green_data$size, green_data$Rent)
xyplot(green_data$Rent~green_data$age|green_data$LEED, main='Scatterplots by LEED Certification', ylab='RENT', xlab='age')
xyplot(green_data$Rent~green_data$age|green_data$Energystar, main='Scatterplots by Energystar Certification', ylab='RENT', xlab='age')
par(mfrow = c(1,2))
plot(green_data$Energystar, green_data$cd_total_07, xlab='ENERGYSTAR', ylab='COOLING DEGREE DAYS', col='blue')
plot(green_data$LEED, green_data$cd_total_07, xlab='LEED', ylab='COOLING DEGREE DAYS', col='blue')
par(mfrow = c(1,2))
plot(green_data$Energystar, green_data$hd_total07, xlab='ENERGYSTAR', ylab='HEATING DEGREE DAYS', col='red')
plot(green_data$LEED, green_data$hd_total07, xlab='LEED', ylab='HEATING DEGREE DAYS', col='red')
plot(green_data$LEED, green_data$leasing_rate, , ylab='LEASING RATE', xlab='LEED CERTIFIED')
par(mfrow=c(1,2))
plot(green_data$LEED, green_data$leasing_rate, , ylab='LEASING RATE', xlab='LEED CERTIFIED')
par(mfrow=c(1,2))
plot(green_data$LEED, green_data$leasing_rate, ylab='LEASING RATE', xlab='LEED CERTIFIED', col='pink')
plot(green_data$Energystar, green_data$leasing_rate, ylab='LEASING RATE', xlab='ENERGYSTAR CERTIFIED', col='burlywood')
par(mfrow=c(1,2))
plot(green_data$LEED, green_data$leasing_rate, ylab='LEASING RATE', xlab='LEED CERTIFIED', col='pink')
plot(green_data$Energystar, green_data$leasing_rate, ylab='LEASING RATE', xlab='ENERGYSTAR CERTIFIED', col='burlywood')
plot(green_data$LEED, green_data$leasing_rate, ylab='LEASING RATE', xlab='LEED CERTIFIED', col='pink')
abline(h= mean(green_data$leasing_rate))
plot(green_data$LEED, green_data$leasing_rate, ylab='LEASING RATE', xlab='LEED CERTIFIED', col='pink')
abline(h= mean(green_data$leasing_rate))
par(mfrow=c(1,2))
plot(green_data$LEED, green_data$leasing_rate, ylab='LEASING RATE', xlab='LEED CERTIFIED', col='pink')
plot(green_data$Energystar, green_data$leasing_rate, ylab='LEASING RATE', xlab='ENERGYSTAR CERTIFIED', col='burlywood')
hist(green_data$Rent)
# Compare RENT values vs. being LEED or ENERGYSTAR CERTIFIED
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='pink')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$stories, xlab='LEED CERTIFED', ylab='# of STORIES', col='pink')
plot(green_data$Energystar, green_data$stories, xlab='ENERGYSTAR CERTIFED', ylab='# of STORIES', col='burlywood')
plot(green_data$stories, green_data$Rent)
bwplot(green_data$Rent~green_data$LEED|green_data$renovated, ylab='RENT',  xlab='LEED vs. NOT LEED', main='Rent by Class B and RENOVATED')
bwplot(green_data$Rent~green_data$LEED|green_data$renovated, ylab='RENT',  xlab='LEED vs. NOT LEED', main='Rent by LEED and RENOVATED')
bwplot(green_data$Rent~green_data$Energystar|green_data$renovated, ylab='RENT',  xlab='ENERGYSTAR vs. NOT ENERGYSTAR', main='Rent by ENERGYSTAR and RENOVATED')
bwplot(green_data$Rent~green_data$renovated|green_data$Energystar, ylab='RENT',  xlab='RENOVATED vs. NOT RENOVATED', main='Rent by ENERGYSTAR and RENOVATED')
bwplot(green_data$Rent~green_data$renovated|green_data$LEED, ylab='RENT',  xlab='RENOVATED vs. NOT RENOVATED', main='Rent by LEED and RENOVATED')
plot(green_data$renovated, green_data$Rent)
dotplot(green_data$renovated~green_data$Rent|green_data$LEED)
str(green_data)
# Compare RENT values vs. being LEED or ENERGYSTAR CERTIFIED
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='pink')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
plot(green_data$green_rating, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='beige')
green_data$green_rating = as.factor(green_data$green_rating)
plot(green_data$green_rating, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='beige')
plot(green_data$green_rating, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='beige')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='pink')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
plot(green_data$green_rating, green_data$Rent, xlab='GREEN CERTIFIED', ylab='RENT', col='beige')
plot(green_data$green_rating, green_data$Gas_Costs, xlab='GREEN CERTIFIED', ylab='GAS COSTS', col='beige')
#compare LEEDS vs. ENERGY STAR in Gas costs
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Gas_Costs, xlab='LEED CERTIFED', ylab='GAS COSTS', col='pink')
plot(green_data$Energystar, green_data$Gas_Costs, xlab='ENERGYSTAR CERTIFED', ylab='GAS COSTS', col='burlywood')
plot(green_data$green_rating, green_data$Electricity_Costs, xlab='GREEN CERTIFIED', ylab='ELECTRIC COSTS', col='beige')
par(mfrow = c(1,2))
#compare LEEDS vs. ENERGY STAR in ELECTRICITY COSTS
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Electricity_Costs, xlab='LEED CERTIFED', ylab='ELECTRIC COSTS', col='pink')
plot(green_data$Energystar, green_data$Electricity_Costs, xlab='ENERGYSTAR CERTIFED', ylab='ELECTRIC COSTS', col='burlywood')
library(lattice)
bwplot(green_data$Rent~green_data$LEED|green_data$class_a, ylab='RENT',  xlab='LEED vs. NOT LEED', main='Rent by Class A and LEED')
library(lattice)
bwplot(green_data$Rent~green_data$Energystar|green_data$class_a, ylab='RENT',  xlab='ENERGYSTAR vs. NOT ENERGYSTAR', main='Rent by Class A and ENERGYSTAR')
library(lattice)
bwplot(green_data$Rent~green_data$LEED|green_data$class_b, ylab='RENT',  xlab='LEED vs. NOT LEED', main='Rent by Class B and LEED')
library(lattice)
bwplot(green_data$Rent~green_data$Energystar|green_data$class_b, ylab='RENT',  xlab='ENERGYSTAR vs. NOT ENERGYSTAR', main='Rent by Class B and ENERGYSTAR')
par(mfrow = c(1,2))
plot(green_data$Energystar, green_data$cd_total_07, xlab='ENERGYSTAR', ylab='COOLING DEGREE DAYS', col='blue')
plot(green_data$LEED, green_data$cd_total_07, xlab='LEED', ylab='COOLING DEGREE DAYS', col='blue')
plot(green_data$green_rating, green_data$cd_total_07)
plot(green_data$green_rating, green_data$cd_total_07, col='blue)
plot(green_data$green_rating, green_data$cd_total_07, col='blue')
plot(green_data$green_rating, green_data$cd_total_07, col='blue')
plot(green_data$green_rating, green_data$cd_total_07, col='blue', xlab='GREEN RATING' , ylab=' COOL DAYS')
plot(green_data$green_rating, green_data$cd_total_07, col='blue', xlab='GREEN RATING' , ylab='COOL DAYS')
par(mfrow = c(1,2))
plot(green_data$Energystar, green_data$hd_total07, xlab='ENERGYSTAR', ylab='HEATING DEGREE DAYS', col='red')
plot(green_data$LEED, green_data$hd_total07, xlab='LEED', ylab='HEATING DEGREE DAYS', col='red')
plot(green_data$green_rating, green_data$hd_total07 , col='red', xlab='GREEN RATING' , ylab='HEATING DAYS')
plot(green_data$LEED, green_data$hd_total07, xlab='LEED', ylab='HEATING DEGREE DAYS', col='red')
par(mfrow = c(1,2))
plot(green_data$Energystar, green_data$hd_total07, xlab='ENERGYSTAR', ylab='HEATING DEGREE DAYS', col='red')
plot(green_data$LEED, green_data$hd_total07, xlab='LEED', ylab='HEATING DEGREE DAYS', col='red')
plot(green_data$size, green_data$Rent, xlab='SIZE', ylab='RENT')
cor(green_data$size, green_data$Rent)
xyplot(green_data$Rent~green_data$age|green_data$LEED, main='Scatterplots by LEED Certification', ylab='RENT', xlab='age')
plot(green_data$age, green_data$Rent, xlab='AGE', ylab='RENT')
xyplot(green_data$Rent~green_data$age|green_data$Energystar, main='Scatterplots by Energystar Certification', ylab='RENT', xlab='age')
par(mfrow=c(1,2))
plot(green_data$LEED, green_data$leasing_rate, ylab='LEASING RATE', xlab='LEED CERTIFIED', col='pink')
plot(green_data$Energystar, green_data$leasing_rate, ylab='LEASING RATE', xlab='ENERGYSTAR CERTIFIED', col='burlywood')
plot(green_data$green_rating, green_data$leasing_rate, ylab='LEASING RATE', xlab='GREEN CERTIFIED', col='beige')
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$stories, xlab='LEED CERTIFED', ylab='# of STORIES', col='pink')
plot(green_data$Energystar, green_data$stories, xlab='ENERGYSTAR CERTIFED', ylab='# of STORIES', col='burlywood')
plot(green_data$green_rating, green_data$stories, xlab='GREEN CERTIFED', ylab='# of STORIES')
plot(green_data$green_rating, green_data$stories, xlab='GREEN CERTIFED', ylab='# of STORIES', col='beige)
plot(green_data$green_rating, green_data$stories, xlab='GREEN CERTIFED', ylab='# of STORIES', col='biege')
plot(green_data$green_rating, green_data$stories, xlab='GREEN CERTIFED', ylab='# of STORIES',col='biege')
plot(green_data$green_rating, green_data$stories, xlab='GREEN CERTIFED', ylab='# of STORIES',col='beige')
xyplot(green_data$Rent~green_data$stories|green_data$LEED, ylab='RENT',  xlab='STORIES', main='Rent Scatterplot by Stories and LEED')
xyplot(green_data$Rent~green_data$stories|green_data$green_rating, ylab='RENT',  xlab='STORIES', main='Rent Scatterplot by Stories and LEED')
xyplot(green_data$Rent~green_data$stories|green_data$green_rating, ylab='RENT',  xlab='STORIES', main='Rent Scatterplot by Stories and Green Rating')
library(lattice)
bwplot(green_data$Rent~green_data$renovated|green_data$LEED, ylab='RENT',  xlab='RENOVATED vs. NOT RENOVATED', main='Rent by LEED and RENOVATED')
library(lattice)
bwplot(green_data$Rent~green_data$renovated|green_data$Energystar, ylab='RENT',  xlab='RENOVATED vs. NOT RENOVATED', main='Rent by ENERGYSTAR and RENOVATED')
plot(green_data$amenities, green_data$Rent)
plot(green_data$amenities, green_data$Rent, xlab='AMENITIES', ylab='RENT', col='beige')
bwplot(green_data$amenities~green_data$Rent|green_data$green_rating, xlab='AMENITIES', ylab='RENT', main='RENT by AMENITIES AND GREEN RATING)
bwplot(green_data$amenities~green_data$Rent|green_data$green_rating, xlab='AMENITIES', ylab='RENT', main='RENT by AMENITIES AND GREEN RATING')
bwplot(green_data$amenities~ green_data$Rent|green_data$green_rating, xlab='AMENITIES', ylab='RENT', main='RENT by AMENITIES AND GREEN RATING')
plot(green_data$net, green_data$green_rating, xlab='NET', ylab='GREEN RATING')
plot(green_data$net, green_data$Rent, xlab='NET', ylab='RENT', col='beige)
plot(green_data$net, green_data$Rent, xlab='NET', ylab='RENT', col='beige)
plot(green_data$net, green_data$Rent, xlab='NET', ylab='RENT', col='beige')
xyplot(green_data$Rent~green_data$net|green_data$green_rating, xlab='NET', ylab='RENT', main='SCATTERPLOT of RENT by NET and GREEN CERTIFIED)
xyplot(green_data$Rent~green_data$net|green_data$green_rating, xlab='NET', ylab='RENT', main='SCATTERPLOT of RENT by NET and GREEN CERTIFIED')
xyplot(green_data$Rent~ green_data$net|green_data$green_rating, xlab='NET', ylab='RENT', main='SCATTERPLOT of RENT by NET and GREEN CERTIFIED')
bwplot(green_data$Rent~ green_data$net|green_data$green_rating, xlab='NET', ylab='RENT', main='BOXPLOT of RENT by NET and GREEN CERTIFIED')
# Compare RENT values vs. being LEED or ENERGYSTAR CERTIFIED
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='pink')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
library(LICORS)  # for kmeans++
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
X = socialmarketing[,-(1:2)]
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
X = socialmarketing[,-(1:2)]
X = scale(X, center=TRUE, scale=TRUE)
mu = attr(X,"scaled:center")
summary(x)
summary(X)
X = socialmarketing[,-(1:2)]
summary(X)
X = socialmarketing[,-(1:2)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
summary(socialmarketing)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
```{r, echo=FALSE}
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
socialmarketing = read.csv('social_marketing.csv', header=TRUE)
dim(socialmarketing)
# Center and scale the data
X = socialmarketing[,-(1:1)]
X = scale(X, center=TRUE, scale=TRUE)
summary(X)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
set.seed(1)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu
clust5$center[1,]*sigma + mu
clust5$center[2,]*sigma + mu
clust5$center[3,]*sigma + mu
clust5$center[4,]*sigma + mu#
clust5$center[5,]*sigma + mu
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu #chatter, photo_sharing
set.seed(1)
clust5 = kmeanspp(X, k=5, nstart=25)
clust5$center[1,]*sigma + mu #chatter, photo_sharing
clust5$center[2,]*sigma + mu #cooking, fashion, beauty, chatter, photo sharing
clust5$center[3,]*sigma + mu #chatter, photo sharing, personal fitness, health nutrition
clust5$center[4,]*sigma + mu #chatter, photo sharing, parenting, sports fandom, food, family
clust5$center[5,]*sigma + mu #chatter, photo_sharing, news, politics, travel
clust5$tot.withinss
clust5$betweenss
set.seed(1)
clust4 = kmeanspp(X, k=4, nstart=25)
clust4$center[1,]*sigma + mu
clust4$center[2,]*sigma + mu
clust4$center[3,]*sigma + mu
clust4$center[4,]*sigma + mu
clust4$tot.withinss
clust4$betweenss
set.seed(1)
clust6 = kmeanspp(X, k=6, nstart=25)
clust6$center[1,]*sigma + mu
clust6$center[2,]*sigma + mu
clust6$center[3,]*sigma + mu
clust6$center[4,]*sigma + mu
clust6$center[5,]*sigma + mu
clust6$center[6,]*sigma + mu
clust6$tot.withinss
clust6$betweenss
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:5, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
### finding the optimal K###
set.seed(2)
mydata <- X
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
clust6$center[1,]*sigma + mu #chatter, photo sharing
clust6$center[5,]*sigma + mu # politics, travel, news
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(online_gaming, college_uni,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(health_nutrition, personal_fitness, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(family, sports_fandom, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(religion, sports_fandom, data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(news, politics,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(beauty, fashion,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
qplot(chatter, photo_sharing,data=socialmarketing, size=I(3), color=factor(clust6$cluster))
library(foreach)  # I typically use this for MC simulations
Horizon = 40
ReturnAvg = 0.05
Wealth = 10000
for(year in 1:Horizon) {
ThisReturn = ReturnAvg
Wealth = Wealth * (1 + ThisReturn)
}
Wealth
10000 * (1+ReturnAvg)^40
Wealth = 10000  # Reset initial wealth
WealthOverTime = rep(0, Horizon)  # Allocate some space
for(year in 1:Horizon) {
ThisReturn = ReturnAvg
Wealth = Wealth * (1 + ThisReturn)
WealthOverTime[year] = Wealth
}
Wealth
plot(WealthOverTime)
ReturnAvg = 0.05
ReturnSD = 0.05
Horizon = 40
Wealth = 10000  # Reset initial wealth
WealthOverTime = rep(0, Horizon)  # Allocate some space
for(year in 1:Horizon) {
ThisReturn = rnorm(1, ReturnAvg, ReturnSD)
Wealth = Wealth * (1 + ThisReturn)
WealthOverTime[year] = Wealth
}
Wealth
plot(WealthOverTime)
ReturnAvg = 0.05
ReturnSD = 0.05
Horizon = 40
sim1 = foreach(i=1:1000, .combine='c') %do% {
Wealth = 10000  # Reset initial wealth
# Sweep through each year and update the value of wealth
for(year in 1:Horizon) {
# Generate a random return
ThisReturn = rnorm(1, ReturnAvg, ReturnSD)
# Update wealth
Wealth = Wealth * (1 + ThisReturn)
}
# Output the value of wealth for each simulated scenario
Wealth
}
hist(sim1, 50)
abline(v=10000 * (1+ReturnAvg)^40, col='red', lwd=3)
mean(sim1)
sd(sim1)
ReturnAvg = 0.05
ReturnSD = 0.025
Horizon = 40
sim1 = foreach(i=1:500, .combine='rbind') %do% {
Wealth = 10000  # Reset initial wealth
WealthOverTime = rep(0, Horizon)  # Allocate some space
# Sweep through each year and update the value of wealth
for(year in 1:Horizon) {
ThisReturn = rnorm(1, ReturnAvg, ReturnSD)
Wealth = Wealth * (1 + ThisReturn)
WealthOverTime[year] = Wealth
}
WealthOverTime
}
head(sim1)
plot(1:Horizon, sim1[1,], type='l')
lines(1:Horizon, sim1[2,], type='l')
lines(1:Horizon, sim1[3,], type='l')
plot(1:Horizon, colMeans(sim1), type='l', col='red',
las=1, xlab='Year', ylab='Value',
main='A 40-year portfolio: uncertainty over time', cex.axis=0.8)
for(sim in 1:200) {
lines(1:Horizon, sim1[sim,], type='l', col=rgb(0,0,0.5,0.05))
}
lines(1:Horizon, colMeans(sim1), col='red', lwd=2)
hist(sim1[,Horizon])
mean(sim1[, Horizon])
sd(sim1[, Horizon])
library(mosaic)
library(quantmod)
install.packages("quantmod")
library(quantmod)
library(foreach)
mystocks = c("MRK", "JNJ", "SPY")
getSymbols(mystocks)
MRKa = adjustOHLC(MRK)
JNJa = adjustOHLC(JNJ)
SPYa = adjustOHLC(SPY)
plot(ClCl(MRKa))
all_returns = cbind(ClCl(MRKa),ClCl(JNJa),ClCl(SPYa))
head(all_returns)
all_returns = as.matrix(na.omit(all_returns))
pairs(all_returns)
plot(all_returns[,1], type='l')
plot(all_returns[,3], type='l')
acf(all_returns[,3])
cor(all_returns)
mystocks = c("WMT", "TGT", "XOM", "MRK", "JNJ")
myprices = getSymbols(mystocks, from = "2007-01-01")
for(ticker in mystocks) {
expr = paste0(ticker, "a = adjustOHLC(", ticker, ")")
eval(parse(text=expr))
}
head(WMTa)
all_returns = cbind(	ClCl(WMTa),
ClCl(TGTa),
ClCl(XOMa),
ClCl(MRKa),
ClCl(JNJa))
head(all_returns)
all_returns = as.matrix(na.omit(all_returns))
pairs(all_returns)
return.today = resample(all_returns, 1, orig.ids=FALSE)
total_wealth = 10000
my_weights = c(0.2,0.2,0.2, 0.2, 0.2)
holdings = total_wealth*my_weights
holdings = holdings*(1 + return.today)
total_wealth = sum(holdings)
total_wealth = 10000
weights = c(0.2, 0.2, 0.2, 0.2, 0.2)
holdings = weights * total_wealth
n_days = 10
wealthtracker = rep(0, n_days) # Set up a placeholder to track total wealth
for(today in 1:n_days) {
return.today = resample(all_returns, 1, orig.ids=FALSE)
holdings = holdings + holdings*return.today
total_wealth = sum(holdings)
wealthtracker[today] = total_wealth
}
total_wealth
plot(wealthtracker, type='l')
initial_wealth = 10000
sim1 = foreach(i=1:5000, .combine='rbind') %do% {
total_wealth = initial_wealth
weights = c(0.2, 0.2, 0.2, 0.2, 0.2)
holdings = weights * total_wealth
n_days = 10
wealthtracker = rep(0, n_days)
for(today in 1:n_days) {
return.today = resample(all_returns, 1, orig.ids=FALSE)
holdings = holdings + holdings*return.today
total_wealth = sum(holdings)
wealthtracker[today] = total_wealth
}
wealthtracker
}
head(sim1)
hist(sim1[,n_days], 25)
mean(sim1[,n_days])
hist(sim1[,n_days]- initial_wealth, breaks=30)
quantile(sim1[,n_days], 0.05) - initial_wealth
rm(list=ls())
setwd("C:/Users/gabriellalio/Desktop/Scott/exercise01")
knitr::opts_chunk$set(echo = TRUE)
plot(green_data$green_rating, green_data$Rent, xlab='GREEN CERTIFIED', ylab='RENT', col='beige')
green_data = read.csv('greenbuildings.csv')
green_data$renovated = as.factor(green_data$renovated)
green_data$class_a = as.factor(green_data$class_a)
green_data$class_b = as.factor(green_data$class_b)
green_data$green_rating = as.factor(green_data$green_rating)
green_data$LEED = as.factor(green_data$LEED)
green_data$Energystar = as.factor(green_data$Energystar)
green_data$net = as.factor(green_data$net)
green_data$amenities = as.factor(green_data$amenities)
green_data$green_rating = as.factor(green_data$green_rating)
plot(green_data$green_rating, green_data$Rent, xlab='GREEN CERTIFIED', ylab='RENT', col='beige')
plot(green_data$green_rating, green_data$Rent, xlab='GREEN CERTIFIED', ylab='RENT', col='beige')
# Compare RENT values vs. being LEED or ENERGYSTAR CERTIFIED
par(mfrow = c(1,2))
plot(green_data$LEED, green_data$Rent, xlab='LEED CERTIFED', ylab='RENT', col='pink')
plot(green_data$Energystar, green_data$Rent, xlab='ENERGYSTAR CERTIFED', ylab='RENT', col='burlywood')
lmgreen = lm(green_data$Rent~., data=green_data)
summary(lmgreen)
plot(green_data$amenities, green_data$green_rating, xlab='AMENITIES', ylab='GREEN RATING')
plot(green_data$green_rating, green_data$amenities, xlab='GREEN RATING', ylab='AMENITIES')
plot(green_data$green_rating, green_data$class_a, xlab='GREEN RATING', ylab='CLASS A')
par(mfrow=c(1,2))
plot(green_data$green_rating, green_data$class_a, xlab='GREEN RATING', ylab='CLASS A')
plot(green_data$green_rating, green_data$class_b, xlab='GREEN RATING', ylab='CLASS B')
plot(green_data$green_rating, green_data$net, ylab='GREEN', xlab='NET')
plot(green_data$green_rating, green_data$net, xlab='GREEN', ylab='NET')
hist(green_data$stories)
hist(green_data$stories, break=10)
hist(green_data$stories, breaks=10)
hist(green_data$stories, breaks=5)
hist(green_data$stories, breaks=30)
mean(green_data$stories)
hist(green_data$stories, breaks=30)
summary(green_data$stories)
plot(green_data$green_rating, green_data$age)
plot(green_data$green_rating, green_data$age, xlab='GREEN RATING', ylab='AGE', col='beige')
